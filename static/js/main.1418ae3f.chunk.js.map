{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isResetButtonVisible","sortedGoods","visibleGoods","sort","prevGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prevState","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAuBJ,IAAaT,EAASQ,MAAQG,EACrDG,EA5BD,SACLZ,EADK,GAGJ,IADCO,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOb,GAazB,OAXAa,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQT,GACN,KAAKT,EAASmB,SACZ,OAAOF,EAASG,cAAcF,GAChC,KAAKlB,EAASqB,OACZ,OAAOJ,EAASK,OAASJ,EAAYI,OACvC,QACE,OAAO,MAITX,EACKI,EAAaQ,UAGfR,EAOaS,CAClBnB,EAAiB,CAAEM,aAAYF,aAYjC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,gBACA,CAAE,WAAYlB,IAAaT,EAASmB,WAEtCS,QAAS,kBAAMlB,EAAYV,EAASmB,WANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaT,EAASqB,SAEtCO,QAAS,kBAAMlB,EAAYV,EAASqB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAxCQ,WACdhB,GAAc,SAAAiB,GAAS,OAAKA,MAiCxB,qBAWEhB,GACA,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZhB,GAAc,GACdF,EAAYV,EAASQ,OAwCf,sBAUJ,cAAC,EAAD,CAAWN,MAAOY,QEnHxBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1418ae3f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currentGood);\n      case SortType.LENGTH:\n        return prevGood.length - currentGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n  const sortedGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  const reverse = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-inf',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        { isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={sortedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}